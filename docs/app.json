[{"name":"app.r","content":"# app.R\r\n# Shiny app with 3D plot functionality\r\n# This can be adapted for visualizing omitted variable bias\r\n\r\n### TODO: ISSUE with axis orientation. The planes are incorrectly plotted wrt the axis. \r\n\r\n\r\nlibrary(shiny)\r\nlibrary(plotly)\r\nlibrary(dplyr)\r\n\r\n# UI definition\r\nui <- fluidPage(\r\n  withMathJax(),\r\n  titlePanel(\"Omitted Variable Bias Visualization in 3D\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      width = 3, # 3/12, default 4/14, 12 columns in total.\r\n      # Input parameters for the 3D plot\r\n      h3(\"Plot Controls\"),\r\n      \r\n      # # X variable\r\n      # selectInput(\"x_var\", \"X Variable:\",\r\n      #             choices = c(\"Treatment\" = \"treatment\",\r\n      #                         \"Confounder\" = \"confounder\"),\r\n      #             selected = \"treatment\"),\r\n      # \r\n      # # Y variable\r\n      # selectInput(\"y_var\", \"Y Variable:\",\r\n      #             choices = c(\"Outcome\" = \"outcome\",\r\n      #                         \"Confounder\" = \"confounder\"),\r\n      #             selected = \"confounder\"),\r\n      # \r\n      # # Z variable\r\n      # selectInput(\"z_var\", \"Z Variable:\",\r\n      #             choices = c(\"Outcome\" = \"outcome\",\r\n      #                         \"Treatment\" = \"treatment\",\r\n      #                         \"Confounder\" = \"confounder\"),\r\n      #             selected = \"outcome\"),\r\n      \r\n      # Function settings\r\n      h4(\"Function Parameters\"),\r\n      numericInput(\"beta_0\", \"Intercept (β₀):\", 0),\r\n      numericInput(\"beta_1\", \"Treatment Effect (β₁):\",1),\r\n      numericInput(\"beta_2\", \"Confounder Effect (β₂):\",0.5),\r\n      numericInput(\"corr_xz\", \"Correlation (X,Z):\", 0.7, min=-1, max=1, step=0.1),\r\n      numericInput(\"sigma_u\", \"Error Standard Deviation (σᵤ):\", 0.01, min=0, max=1, step=0.01),\r\n      \r\n      # Visual settings\r\n      h4(\"Visual Settings\"),\r\n      checkboxInput(\"show_true_plane\", \"Show True Model Plane\", TRUE),\r\n      checkboxInput(\"show_biased_plane\", \"Show Underspecified Model Plane\", TRUE),\r\n      checkboxInput(\"show_data\", \"Show Data Points\", TRUE),\r\n      \r\n      # Sample size slider\r\n      sliderInput(\"n_points\", \"Number of Data Points:\", \r\n                  min = 50, max = 500, value = 200, step = 50)\r\n    ),\r\n    \r\n    mainPanel(\r\n      plotlyOutput(\"plot_3d\", height = \"600px\"),\r\n      \r\n      tabsetPanel(\r\n        tabPanel(\"Model Comparison\", \r\n                 verbatimTextOutput(\"model_summary\")),\r\n        tabPanel(\"Explanation\", \r\n                 includeMarkdown(\"explanation.md\")),\r\n        tabPanel(\"Notes\", \r\n                 h4(\"Omitted variable bias visualization in 3D\"),\r\n                 p(\r\n                   \"Created for Econometrics Teaching at University of St. Gallen \",\r\n                   a(\"by Erik Senn\", href = \"https://eriksenn.github.io/\", target = \"_blank\")\r\n                 ),\r\n                 tags$br(),\r\n                 a(\"Original Source and Idea from: Wolfram Demonstration by Timur Gareev (2018)\", \r\n                   href = \"https://demonstrations.wolfram.com/OmittedVariableBiasIn3D/\", target = \"_blank\"),\r\n                 p(\"License: CC BY-NC-SA\"),\r\n                 p(\"Developed with the help of generative AI.\")\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Server logic\r\nserver <- function(input, output, session) {\r\n  \r\n  # Generate data based on inputs\r\n  generate_data <- reactive({\r\n    # Set seed for reproducibility within the session\r\n    set.seed(123)\r\n    \r\n    # Number of points\r\n    n <- input$n_points\r\n    \r\n    # Generate confounder Z\r\n    z <- rnorm(n, mean = 0, sd = 1)\r\n    \r\n    # Generate treatment X with correlation to Z\r\n    x <- input$corr_xz * z + sqrt(1 - input$corr_xz^2) * rnorm(n)\r\n    \r\n    # Generate outcome Y based on true model\r\n    y_true <- input$beta_0 + input$beta_1 * x + input$beta_2 * z + rnorm(n, sd = input$sigma_u)\r\n    \r\n    # Create dataframe\r\n    data.frame(\r\n      x = x,\r\n      z = z,\r\n      y = y_true\r\n    )\r\n  })\r\n  \r\n  # Compute models\r\n  compute_models <- reactive({\r\n    data <- generate_data()\r\n    \r\n    # True model (with confounder)\r\n    true_model <- lm(y ~ x + z, data = data)\r\n    \r\n    # Biased model (without confounder)\r\n    biased_model <- lm(y ~ x, data = data)\r\n    \r\n    list(\r\n      true_model = true_model,\r\n      biased_model = biased_model,\r\n      data = data\r\n    )\r\n  })\r\n  \r\n  # 3D Plot\r\n  output$plot_3d <- renderPlotly({\r\n    models <- compute_models()\r\n    data <- models$data\r\n    \r\n    # Create basic 3D scatter plot\r\n    p <- plot_ly(type = 'scatter3d') %>%\r\n      layout(\r\n        scene = list(\r\n          xaxis = list(title = \"Treatment (X)\"), # input$x_var\r\n          yaxis = list(title = \"Confounder (Z)\"), # input$y_var\r\n          zaxis = list(title = \"Outcome (Y)\") # input$z_var\r\n          # Set the camera position\r\n          # camera = current_camera\r\n        ),\r\n        title = \"Comparison of True vs. Biased Models\"\r\n      )\r\n    \r\n    # Add data points if selected\r\n    if (input$show_data) {\r\n      p <- p %>% add_trace(\r\n        data = data,\r\n        x = ~x, y = ~z, z = ~y,\r\n        mode = 'markers',\r\n        marker = list(size = 3, opacity = 0.6),\r\n        name = 'Data Points'\r\n      )\r\n    }\r\n    p\r\n    \r\n    # Create grid for planes\r\n    grid_size <- 20\r\n    x_range <- range(data$x)\r\n    z_range <- range(data$z)\r\n    x_grid <- seq(x_range[1], x_range[2], length.out = grid_size)\r\n    z_grid <- seq(z_range[1], z_range[2], length.out = grid_size)\r\n    grid <- expand.grid(x = x_grid, z = z_grid)\r\n    \r\n    # True model plane\r\n    if (input$show_true_plane) {\r\n      grid$y_true <- predict(models$true_model, newdata = grid)\r\n      # grid$y_true <- with(grid, input$beta_0 + input$beta_1 * z + input$beta_2 * x)\r\n      \r\n      # p <- p %>% add_surface(\r\n      #   x = x_grid,\r\n      #   z = z_grid,\r\n      #   y = matrix(grid$y_true, nrow = grid_size, ncol = grid_size),\r\n      #   opacity = 0.7,\r\n      #   colorscale = list(c(0, 1), c(\"blue\", \"lightblue\")),\r\n      #   name = \"True Model\"\r\n      # )\r\n      # Ensure grid$y_true is reshaped into a matrix\r\n      grid_matrix <- t(matrix(grid$y_true, nrow = grid_size, ncol = grid_size))\r\n      \r\n      p <- p %>% add_surface(\r\n         x = x_grid,  # X remains the same (treatment)\r\n         y = z_grid,  # Y remains the same (confounder)\r\n         z = grid_matrix,  # Correct: Y (Outcome) should be the matrix for surface plotting\r\n        opacity = 0.7,\r\n        colorscale = list(c(0, 1), c(\"blue\", \"lightblue\")),\r\n        name = \"True Model\",\r\n        colorbar = list(title = \"Y - true model\")  \r\n      )\r\n      \r\n    }\r\n    \r\n    # Biased model plane\r\n    if (input$show_biased_plane) {\r\n      grid <- expand.grid(x = x_grid, z = z_grid)\r\n      grid$y_biased <- predict(models$biased_model, newdata = grid[, \"x\", drop = FALSE])\r\n      grid_matrix <- t(matrix(grid$y_biased, nrow = grid_size, ncol = grid_size))\r\n      \r\n      p <- p %>% add_surface(\r\n         x = x_grid,\r\n         y = z_grid,\r\n         z = grid_matrix,\r\n        opacity = 0.7,\r\n        colorscale = list(c(0, 1), c(\"red\", \"pink\")),\r\n        name = \"Biased Model\",\r\n        colorbar = list(title = \"Y - underspecified model\")  \r\n      )\r\n    }\r\n    \r\n\r\n    \r\n    p\r\n    \r\n    # Add an event to capture camera changes\r\n    # p <- p %>% onRender(\"\r\n    #   function(el, x) {\r\n    #     var gd = document.getElementById(el.id);\r\n    #     gd.on('plotly_relayout', function(d) {\r\n    #       if (d['scene.camera']) {\r\n    #         Shiny.setInputValue('camera_change', {\r\n    #           eye: d['scene.camera'].eye,\r\n    #           center: d['scene.camera'].center,\r\n    #           up: d['scene.camera'].up\r\n    #         });\r\n    #       }\r\n    #     });\r\n    #   }\r\n    # \")\r\n    \r\n  })\r\n  \r\n  # Model summary output\r\n  output$model_summary <- renderPrint({\r\n    models <- compute_models()\r\n    \r\n    cat(\"True Model (includes confounder):\\n\")\r\n    print(summary(models$true_model))\r\n    \r\n    cat(\"\\nUnderspecified Model (omits confounder):\\n\")\r\n    print(summary(models$biased_model))\r\n    \r\n    cat(\"\\nBias Analysis:\\n\")\r\n    cat(\"True model: X coefficient:\", round(coef(models$true_model)[\"x\"], 4), \"\\n\")\r\n    cat(\"Underspecified model: X coefficient:\", round(coef(models$biased_model)[\"x\"], 4), \"\\n\")\r\n    cat(\"Difference (Bias 'in sample'):\", round(coef(models$biased_model)[\"x\"] - coef(models$true_model)[\"x\"], 4), \"\\n\")\r\n  })\r\n}\r\n\r\n\r\n\r\n# Run the application\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"explanation.md","content":"# Understanding Omitted Variable Bias\r\n\r\n## What is Omitted Variable Bias?\r\n\r\nOmitted Variable Bias occurs when a regression model leaves out an important variable that affects both the dependent variable (outcome) and one or more included independent variables (predictors). This leads to a biased estimate of the effect of the included variables.\r\nThis tool visualizes the bias for a simple example model.\r\n\r\n## Causal Structure\r\n\r\nIn this visualization, we have the following random variables:\r\n  \r\n  - $\\mathbf{X}$: Treatment or explanatory variable (what we're interested in)\r\n- $\\mathbf{Y}$: Outcome variable (what we're trying to predict)\r\n- $\\mathbf{Z}$: Omitted variable (or confounder)\r\n- $\\mathbf{U}$: Error term with $E[\\mathbf{U}] = 0$ and independent of $X$ and $Z$.\r\n\r\nThe true causal structure is:\r\n  \r\n  1. $\\mathbf{X}$ directly affects $\\mathbf{Y}$ (the causal effect we want to estimate)\r\n2. $\\mathbf{Z}$ affects $\\mathbf{X}$ (the confounder influences our treatment)\r\n3. $\\mathbf{Z}$ affects $\\mathbf{Y}$ (the confounder directly influences our outcome)\r\n\r\n## The Bias Mechanism\r\n\r\nWhen we omit $\\mathbf{Z}$ from our model, the estimated effect of $\\mathbf{X}$ on $\\mathbf{Y}$ is biased if all of the following conditions are fulfilled:\r\n  \r\n  1. $\\mathbf{X}$ is correlated with $\\mathbf{Z}$ (because $\\mathbf{Z}$ affects $\\mathbf{X}$)\r\n2. $\\mathbf{Z}$ directly affects $\\mathbf{Y}$\r\n  \r\n  In this case, therefore, $\\mathbf{X}$ captures some of $\\mathbf{Z}$'s effect on $\\mathbf{Y}$ through their correlation.\r\n\r\nMathematically, if the true model is:\r\n\r\n$$\\mathbf{Y} = \\beta_0 + \\beta_1 \\mathbf{X} + \\beta_2 \\mathbf{Z} + \\mathbf{U}$$\r\n\r\nBut we estimate the underspecified model:\r\n\r\n$$\\mathbf{Y} = \\beta_0^* + \\beta_1^* \\mathbf{X} + \\mathbf{U^*}$$\r\n\r\nThen the expected value of the estimated coefficient is:\r\n\r\n$$E[\\beta_1^*] = \\beta_1 + \\beta_2 \\cdot \\frac{\\text{Cov}(\\mathbf{X},\\mathbf{Z})}{\\text{Var}(\\mathbf{X})}$$\r\n\r\nThe bias term is:\r\n\r\n$$\\beta_2 \\cdot \\frac{\\text{Cov}(\\mathbf{X},\\mathbf{Z})}{\\text{Var}(\\mathbf{X})}$$\r\n\r\n## Direction of Bias\r\n\r\nThe direction of the bias depends on:\r\n\r\n1. The sign of $\\beta_2$ (the effect of $\\mathbf{Z}$ on $\\mathbf{Y}$)\r\n2. The sign of the correlation between $\\mathbf{X}$ and $\\mathbf{Z}$\r\n\r\n- If $\\beta_2 > 0$ and $\\text{Corr}(\\mathbf{X},\\mathbf{Z}) > 0$, the bias is **positive** (overestimation)\r\n- If $\\beta_2 > 0$ and $\\text{Corr}(\\mathbf{X},\\mathbf{Z}) < 0$, the bias is **negative** (underestimation)\r\n- If $\\beta_2 < 0$ and $\\text{Corr}(\\mathbf{X},\\mathbf{Z}) > 0$, the bias is **negative** (underestimation)\r\n- If $\\beta_2 < 0$ and $\\text{Corr}(\\mathbf{X},\\mathbf{Z}) < 0$, the bias is **positive** (overestimation)\r\n\r\n## Visualizing the Bias in 3D\r\n\r\nIn this 3D visualization:\r\n\r\n- The **blue plane** represents the true model (including $\\mathbf{Z}$)\r\n- The **red plane** represents the underspecifed (potentially biased) model (omitting $\\mathbf{Z}$)\r\n- The **vertical distance** between the two planes represents the bias\r\n\r\nThe bias varies across different values of $\\mathbf{X}$ and $\\mathbf{Z}$, illustrating how the omission of the confounding variable distorts our understanding of the true causal relationship.\r\n\r\n","type":"text"},{"name":"shiny_app.Rproj","content":"Version: 1.0\r\nProjectId: bbf9daeb-a488-4b39-aaaf-220d3bdcbb8e\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
